{"version":3,"sources":["App.module.scss","components/AnimeCard/AnimeCard.module.scss","components/Header/Header.module.scss","components/common/Spinner/Spinner.module.scss","components/Content/Content.module.scss","components/AnimeCard/index.jsx","service/http.js","store/types/index.js","components/common/Spinner/index.jsx","components/Content/index.jsx","store/actions/anime.js","components/Header/index.jsx","App.jsx","helpers/updateObject.js","store/reducers/anime.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","AnimeCard","data","href","url","className","styles","card","target","card_image","loading","src","image_url","alt","title","card_name","axiosInstance","axios","create","baseURL","searchAnime","query","a","pageNumber","get","status","Error","console","log","GET_ANIME","SET_ANIME","SET_LOADER","Spinner","loader","Content","animeList","useSelector","state","animeReducer","keyword","searchWord","currentPage","lastPage","lastPageNumber","isLoading","dispatch","useDispatch","mainContainer","cardContainer","map","item","mal_id","loadMoreContainer","onClick","type","payload","res","results","setAnimeList","loadMoreButton","infoText","Header","useState","setKeyword","searchAnimeHandler","last_page","getAnimeList","header","placeholder","onChange","e","value","onKeyDown","key","requestInfo","App","wrapper","main","updateObject","oldObject","newObject","INITIAL_STATE","reducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79f90c4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__RCHjb\",\"header\":\"App_header__2L3DO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"AnimeCard_card__38czu\",\"card_image\":\"AnimeCard_card_image__XjunC\",\"card_name\":\"AnimeCard_card_name__Q34Li\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"requestInfo\":\"Header_requestInfo__3SHsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__lEViq\",\"load7\":\"Spinner_load7__lGcGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Content_mainContainer__9fp7j\",\"cardContainer\":\"Content_cardContainer__2Th-S\",\"loadMoreContainer\":\"Content_loadMoreContainer__1mMIB\",\"loadMoreButton\":\"Content_loadMoreButton__DUz_2\",\"infoText\":\"Content_infoText__2y52I\"};","import React from 'react';\nimport styles from './AnimeCard.module.scss';\n\nconst AnimeCard = ({ data }) => {\n  return (\n    <>\n      <a href={data.url} className={styles.card} target='_'>\n        <div className={styles.card_image}>\n          <img loading='lazy' src={data.image_url} alt={data.title} />\n        </div>\n        <div className={styles.card_name}>\n          <span>{data.title}</span>\n        </div>\n      </a>\n    </>\n  );\n};\n\nexport default AnimeCard;\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: \"https://api.jikan.moe/v3\"\n});\n\n\n/**\n * @function - search for a anime\n * @params - anime keyword\n */\n\nexport const searchAnime = async (query, pageNumber = 1) => {\n    try {\n        if (query) {\n            const { data, status } = await axiosInstance.get(`/search/anime?q=${query}&limit=16&page=${pageNumber}`);\n            if (status !== 200)\n                throw new Error('Unable to fetch results!');\n            return data;\n        }\n    } catch (error) {\n        console.log(error);\n        throw error;\n    }\n}","export const GET_ANIME = \"GET_ANIME\";\nexport const SET_ANIME = \"SET_ANIME\";\nexport const SET_LOADER = \"SET_LOADER\";","import React from 'react';\nimport styles from './Spinner.module.scss';\n\nconst Spinner = () => {\n  return (\n    <>\n      <div className={styles.loader}>Loading...</div>\n    </>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport AnimeCard from '../AnimeCard';\nimport styles from './Content.module.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAnimeList } from '../../store/actions/anime';\nimport Spinner from '../common/Spinner';\n\nconst Content = () => {\n  const animeList = useSelector(state => state.animeReducer.animeList);\n  const keyword = useSelector(state => state.animeReducer.searchWord);\n  const currentPage = useSelector(state => state.animeReducer.pageNumber);\n  const lastPage = useSelector(state => state.animeReducer.lastPageNumber);\n  const isLoading = useSelector(state => state.animeReducer.isLoading);\n  const dispatch = useDispatch();\n\n  const loadMoreAnimeHandler = () => {\n    const updatedPageNumber = currentPage + 1;\n    dispatch(setAnimeList(keyword, updatedPageNumber));\n  };\n\n  return (\n    <div className={styles.mainContainer}>\n      <div className={styles.cardContainer}>\n        {animeList.map(item => (\n          <AnimeCard key={item.mal_id} data={item} />\n        ))}\n      </div>\n      <div className={styles.loadMoreContainer} onClick={loadMoreAnimeHandler}>\n        {!isLoading ? (\n          currentPage !== lastPage ? (\n            <a href='#!' className={styles.loadMoreButton}>\n              Load more...\n            </a>\n          ) : (\n            <h5 className={styles.infoText}>All data fetched!</h5>\n          )\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import { searchAnime } from '../../service/http';\nimport { GET_ANIME, SET_ANIME, SET_LOADER } from '../types';\n\n\n\nexport const getAnimeList = (keyword) => async (dispatch) => {\n    dispatch({ type: SET_LOADER, payload: true });\n    const res = await searchAnime(keyword);\n    const payload = { animeList: res?.results, keyword, lastPage: res?.last_page }\n    dispatch({ type: GET_ANIME, payload });\n}\n\nexport const setAnimeList = (keyword, pageNumber) => async (dispatch) => {\n    dispatch({ type: SET_LOADER, payload: true });\n    const res = await searchAnime(keyword, pageNumber);\n    const payload = { animeList: res?.results, pageNumber }\n    dispatch({ type: SET_ANIME, payload });\n}\n","import React, { useState } from 'react';\nimport styles from './Header.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { getAnimeList } from '../../store/actions/anime';\n\nconst Header = () => {\n  const [keyword, setKeyword] = useState('');\n  const dispatch = useDispatch();\n\n  const searchAnimeHandler = () => {\n    if (keyword) dispatch(getAnimeList(keyword));\n  };\n\n  const searchOnEnterHandler = e => {\n    if (e.key === 'Enter') {\n      searchAnimeHandler();\n    }\n  };\n  return (\n    <>\n      <div className={styles.header}>\n        <input type='text' placeholder='Search for anime' onChange={e => setKeyword(e.target.value)} onKeyDown={searchOnEnterHandler} />\n        <button onClick={e => searchAnimeHandler(e.target.value)}>Go</button>\n        <br />\n      </div>\n      <h6 className={styles.requestInfo}>\n        <span>Requesting : </span> https://api.jikan.moe/v3/search/anime?q={keyword}\n      </h6>\n    </>\n  );\n};\n\nexport default Header;\n","import styles from './App.module.scss';\nimport Content from './components/Content';\nimport Header from './components/Header';\n\nconst App = () => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.header}>\n        <Header />\n      </div>\n      <div className={styles.main}>\n        <Content />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","export default function updateObject(oldObject, newObject) {\n    return {\n        ...oldObject,\n        ...newObject\n    }\n}","import { GET_ANIME, SET_ANIME, SET_LOADER } from '../types';\nimport updateObject from '../../helpers/updateObject'\n\n\nconst INITIAL_STATE = {\n    animeList: [],\n    searchWord: '',\n    pageNumber: 1,\n    isLoading: null,\n    lastPageNumber: null\n};\n\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case GET_ANIME:\n            return updateObject(state, { animeList: action.payload?.animeList, isLoading: false, searchWord: action.payload?.keyword, pageNumber: 1, lastPageNumber: action.payload?.lastPage });\n        case SET_ANIME:\n            return updateObject(state, { animeList: [...state.animeList, ...action.payload?.animeList], isLoading: false, pageNumber: action.payload?.pageNumber });\n        case SET_LOADER:\n            return updateObject(state, { isLoading: action.payload });\n        default:\n            return state\n    }\n}\n\n\nexport default reducer;","import { combineReducers } from 'redux';\n\nimport reducer from './anime';\n\nconst rootReducer = combineReducers({\n    animeReducer: reducer,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/scss/global.scss';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}